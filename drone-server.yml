apiVersion: v1
kind: ServiceAccount
metadata:
  name: drone
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: drone
subjects:
  - kind: ServiceAccount
    name: drone
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone
  namespace: default
  labels:
    app: drone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: drone
  template:
    metadata:
      labels:
        app: drone
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: drone
      containers:
      - image: laszlocloud/drone-oss-08-server:kube-beta
        name: drone
        imagePullPolicy: Always
        env:
          - name: "DRONE_GITHUB_CONTEXT"
            value: "continuous-integration/drone-k8s"
          - name: "DRONE_OPEN"
            value: "true"
          - name: "DRONE_ADMIN"
            value: "laszlocph"
          - name: "DRONE_HOST"
            value: "xxx"
          - name: "DRONE_GITHUB"
            value: "true"
          - name: "DATABASE_DRIVER"
            value: "sqlite3"
          - name: "DRONE_GITHUB_CLIENT"
            valueFrom:
              secretKeyRef:
                name: drone
                key: github-client-id
          - name: "DRONE_GITHUB_SECRET"
            valueFrom:
              secretKeyRef:
                name: drone
                key: github-client-secret
          - name: "DRONE_SECRET"
            valueFrom:
              secretKeyRef:
                name: drone
                key: drone-rpc-secret
          - name: "DRONE_KUBERNETES"
            value: "true"
          - name: "DRONE_KUBERNETES_NAMESPACE"
            value: "default"
          - name: "DRONE_KUBERNETES_STORAGECLASS"
            value: "example-nfs"
          - name: "DRONE_KUBERNETES_VOLUME_SIZE"
            value: "100Mi"
        volumeMounts:
          - mountPath: /var/lib/drone/
            name: data-volume
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: drone
---
kind: Service
apiVersion: v1
metadata:
  name: drone
  namespace: default
spec:
  type: NodePort
  selector:
    app: drone
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
    nodePort: 31555
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: drone
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
  storageClassName: example-nfs

